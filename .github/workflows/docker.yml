---
name: Creating release/hotfix tag

on:
  pull_request:
    branches:
      - master
    types:
      - opened
      - synchronize

jobs:
  build-version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Validate branch name
        run: |
          branch_name="${{ github.head_ref }}"
          target_branch_name="${{ github.base_ref }}"
          echo "branch: $branch_name to target branch: $target_branch_name"

          release_pattern="^(release)/[0-9]+.[0-9]+.[0-9]+$"
          hotfix_pattern="^(hotfix)/[0-9]+.[0-9]+.[0-9]+$"

          if [[ "$branch_name" =~ $release_pattern ]]; then
            echo "Release branch detected"
            if [[ "$target_branch_name" != "master" ]]; then
              echo "Release branch must target master"
              exit 1
            fi
          elif [[ "$branch_name" =~ $hotfix_pattern ]]; then
            echo "Hotfix branch detected"
            if [[ "$target_branch_name" != "master" ]]; then
              echo "Hotfix branch must target master"
              exit 1
            fi
          else
            echo "Invalid branch name"
            exit 1
          fi
        shell: bash

      - name: Extract version from branch name and create rc string
        id: extract_version
        run: |
          branch="${{ github.head_ref }}"
          version=${branch//release\//}
          version=${version//hotfix\//}
          echo "Version: $version"

          # Get current rc number from environment variable
          rc_number=${{ env.RC_NUMBER }}

          # If RC_NUMBER is not set, initialize it to 1
          if [ -z "$rc_number" ]; then
            rc_number=1
          else
            # Increment rc number by 1
            rc_number=$((rc_number + 1))
          fi

          # Create rc string
          rc_string="rc-$rc_number"
          echo "RC string: $rc_string"

          # Set output variables
          echo "::set-output name=version::$version"
          echo "::set-output name=rc_string::$rc_string"

          # Update RC_NUMBER environment variable
          echo "RC_NUMBER=$rc_number" >> $GITHUB_ENV
        shell: bash
