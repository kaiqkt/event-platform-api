---

openapi: 3.0.0
info:
  title: "event-platform-api"
  version: 1.0.0
  description: >-
    event platform api.
  license:
    name: Apache-2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'

paths:
  /producer:
    post:
      tags:
        - producer
      description: Create event producer
      operationId: create
      security:
        - JwtToken: []
      requestBody:
        required: true
        content:
          application/vnd.kaiqkt_producer_v1+json:
            schema:
              $ref: '#/components/schemas/ProducerRequestV1'
      responses:
        200:
          description: Producer created
          content:
            application/vnd.kaiqkt_producer_v1+json:
              schema:
                $ref: '#/components/schemas/ProducerResponseV1'
    get:
      tags:
        - producer
      description: Find all producers
      operationId: findAll
      security:
        - JwtToken: []
      parameters:
        - in: query
          name: service
          schema:
            type: string
          required: false
        - in: query
          name: action
          schema:
            type: string
          required: false
        - in: query
          name: page
          schema:
            type: integer
          required: false
        - in: query
          name: size
          schema:
            type: integer
          required: false
        - in: query
          name: order
          schema:
            type: string
          required: false
        - in: query
          name: sort_by
          schema:
            type: string
          required: false
      responses:
        200:
          description: Producers found
          content:
            application/vnd.kaiqkt_producer_v1+json:
              schema:
                $ref: '#/components/schemas/PageResponseV1'
  /producer/{service}/{action}/{version}:
    delete:
      tags:
        - producer
      description: Delete a producer version
      operationId: deleteVersion
      security:
        - JwtToken: []
      parameters:
        - in: path
          name: service
          schema:
            type: string
          required: true
        - in: path
          name: action
          schema:
            type: string
          required: true
        - in: path
          name: version
          schema:
            type: integer
          required: true
      responses:
        204:
          description: Producer version deleted
  /event:
    post:
      tags:
        - event
      description: Send event
      operationId: send
      security:
        - AccessToken: []
      requestBody:
        required: true
        content:
          application/vnd.kaiqkt_event_v1+json:
            schema:
              $ref: '#/components/schemas/EventV1'
      responses:
        202:
          description: Event sent
        404:
          description: Producer not found
          content:
            application/vnd.kaiqkt_event_v1+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorV1'
  /consumer:
    get:
      tags:
        - consumer
      description: Find all consumers
      operationId: findAll
      security:
        - JwtToken: []
      parameters:
        - in: query
          name: service
          schema:
            type: string
          required: false
        - in: query
          name: page
          schema:
            type: integer
          required: false
        - in: query
          name: size
          schema:
            type: integer
          required: false
        - in: query
          name: order
          schema:
            type: string
          required: false
        - in: query
          name: sort_by
          schema:
            type: string
          required: false
      responses:
        200:
          description: Consumers found
          content:
            application/vnd.kaiqkt_consumer_v1+json:
              schema:
                $ref: '#/components/schemas/PageResponseV1'
  /consumer/{service}/{action}/{version}:
    post:
      tags:
        - consumer
      description: Create event consumer
      operationId: create
      security:
        - JwtToken: []
      parameters:
        - in: path
          name: service
          schema:
            type: string
          required: true
        - in: path
          name: action
          schema:
            type: string
          required: true
        - in: path
          name: version
          schema:
            type: integer
          required: true
      requestBody:
        required: true
        content:
          application/vnd.kaiqkt_consumer_v1+json:
            schema:
              $ref: '#/components/schemas/ConsumerRequestV1'
      responses:
        200:
          description: Consumer created
          content:
            application/vnd.kaiqkt_producer_v1+json:
              schema:
                $ref: '#/components/schemas/ConsumerResponseV1'

components:
  schemas:
    ProducerRequestV1:
      type: object
      properties:
        service:
          type: string
          example: "event-platform-api"
          x-field-extra-annotation: '@NotEmpty(message = "should not be empty")'
        action:
          type: string
          example: "create"
          x-field-extra-annotation: '@NotEmpty(message = "should not be empty")'
        version:
          example:
          allOf:
            - $ref: '#/components/schemas/VersionV1'
          x-field-extra-annotation: '@NotNull(message = "should not be null")'
      required:
        - service
        - action
        - version

    ConsumerRequestV1:
      type: object
      properties:
        service:
          type: string
          example: "consumer-api"
          x-field-extra-annotation: '@NotEmpty(message = "should not be empty")'
        url:
          example: "http://localhost:8080/consumer"
          type: string
          x-field-extra-annotation: '@NotEmpty(message = "should not be empty")'
        content_type:
          example: "application/json"
          type: string
          x-field-extra-annotation: '@NotEmpty(message = "should not be empty")'
      required:
        - service
        - url
        - content_type

    ConsumerResponseV1:
      type: object
      properties:
        service:
          type: string
          example: "consumer-api"
        url:
          type: string
          example: "http://localhost:8080/consumer"
        content_type:
          type: string
          example: "application/json"
        version:
          $ref: '#/components/schemas/VersionV1'
      required:
        - service
        - url
        - version
        - content_type

    ProducerResponseV1:
      type: object
      properties:
        service:
          type: string
          example: "event-platform-api"
        action:
          type: string
          example: "created"
        versions:
          type: array
          items:
            $ref: '#/components/schemas/VersionV1'
        created_at:
          type: string
        updated_at:
          type: string
      required:
        - service
        - action
        - version
        - schema
        - created_at

    EventV1:
      type: object
      properties:
        id:
          type: string
          example: "01HZFNVG3C4WAKK3K8Q9TE49M8"
        service:
          type: string
          example: "event-platform-api"
          x-field-extra-annotation: '@NotEmpty(message = "should not be empty")'
        action:
          type: string
          example: "created"
          x-field-extra-annotation: '@NotEmpty(message = "should not be empty")'
        version:
          type: integer
          example: 1
          x-field-extra-annotation:
            '@Min(value = 1, message = "number must be greater than zero")'
        data:
          allOf:
            - type: object
              additionalProperties:
                type: object
              x-field-extra-annotation:
                '@NotNull(message = "should not be null")'
      required:
        - service
        - action
        - version

    VersionV1:
      type: object
      properties:
        value:
          example: 1
          type: integer
          x-field-extra-annotation:
            '@Min(value = 1, message = "number must be greater than zero")'
        schema:
          example:
            "{\"type\": \"object\", \"properties\":
            {\"name\": {\"type\": \"string\"},
             \"idade\": {\"type\": \"integer\", \"minimum\": 0}},
              \"required\": [\"name\", \"idade\"]}"
          type: string
          x-field-extra-annotation: '@NotEmpty(message = "should not be empty")'
      required:
        - value
        - schema

    PageResponseV1:
      type: object
      properties:
        elements:
          type: array
          items:
            type: object
          example: ["element1", "element2"]
        total_elements:
          type: integer
          example: 2
        total_pages:
          type: integer
          example: 1
        current_page:
          type: integer
          example: 0

    ErrorV1:
      type: object
      properties:
        type:
          type: string
          example: "INVALID_PAYLOAD"
        message:
          type: object
          example: "Invalid property 'name' with value 'null'"
      required:
        - type
        - message

  securitySchemes:
    JwtToken:
      type: http
      scheme: bearer
    AccessToken:
      type: apiKey
      name: Authorization
      in: header
